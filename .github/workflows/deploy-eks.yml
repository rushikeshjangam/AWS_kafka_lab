name: EKS Strimzi Kafka Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Update kubeconfig
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name kafka-cluster

      - name: Deploy Strimzi Operator
        run: |
          kubectl create namespace kafka --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f https://strimzi.io/install/latest?namespace=kafka -n kafka

      - name: Deploy Kafka Cluster
        run: kubectl apply -f kafka-cluster.yaml -n kafka

      - name: Deploy Kafka Bridge
        run: kubectl apply -f kafka-bridge.yaml -n kafka

      # (Optional) - Check pod status and wait until all are ready
      - name: Wait for Kafka Pods
        run: |
          kubectl wait --for=condition=ready pod -l strimzi.io/name=my-cluster-kafka -n kafka --timeout=600s
          kubectl wait --for=condition=ready pod -l strimzi.io/name=my-cluster-zookeeper -n kafka --timeout=600s
          kubectl wait --for=condition=ready pod -l strimzi.io/name=my-bridge-bridge -n kafka --timeout=300s
